mean(sA$counts)
mean(sA$count)
mean(sA)
mean(sB)
nfit <- lm(count~ spray -1)
nfit <- lm(count ~ spray -1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, data = spray2)
fit2 <- lm(counts ~ spray, data = spray2)
fit2 <- lm(spray2)
?
spray
fit2 <- lm(count ~ spray, data = spray2)
spray2
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coefficients
summary(fit2)$coef
mean(sC)
fit$coef[3] - fit$coef[2]/1.6011
(fit$coef[3] - fit$coef[2])/1.6011
(fit$coef[2] - fit$coef[3])/1.6011
swirl()
dim(hunger)
948
nameS(hunger)
names(hunger)
fit <- lm(Numeric ~ Year, data = hunger)
summary(fit)$coefficients
summary(fit)$coef
lmF <- lm(hunger[Numeric ~ Year, data = x[hunger$Sex == "Female"])
lmF <- lm(hunger[Numeric ~ Year, data = x[hunger$Sex == "Female"]))
lmF <- lm(hunger[Numeric ~ Year, data = x[hunger$Sex == "Female"])
lmF <- lm(Numeric ~ Year, data = x[hunger$Sex == "Female"])
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex == "Female"])
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex == "Female"])
swirl_options()
lmF <- lm(Numeric[Sex == "Female"] ~ Year[Sex == "Female"], hunger)
lmM <- lm(Numeric[Sex == "Male"] ~ Year[Sex == "Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which = 1)
coef(fitno) - coef(fit)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out[1, "y"] - prefict(fitno, out2[1, ])
resno <- out2[1, "y"] - prefict(fitno, out2[1, ])
resno <- out2[1, "y"] - predict(fitno, out2[1, ])
1 - resid(fit)[1]/resno
view(hatvalues(fit))
head(hatvalues(fit))
swirl_options()
swirl()
lm_cars <- lm(mpg ~ cyl + wt, mtcars)
summary(lm_cars)
lm_cars <- lm(mpg ~ as.factor(cyl) + wt, mtcars)
summary(lm_cars)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
hatvalues(x, y)
?hatvalues
fit <- lm(x, y)
fit <- lm(x ~ y)
hatvalues(fit)
fit <- lm(y ~ x)
hatvalues(fit)
dfbeta(fit)
fit <- lm(x ~ y)
dfbeta(fit)
?mtcars
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
,destfile="./data/ravensData.rda",method="curl")
load("./data/ravensData.rda")
head(ravensData)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda",destfile="./data/ravensData.rda",method="curl")
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x). (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
)
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x). (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 = slider(-2,2, step = 0.1, intitial = 2),)
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x). (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 = slider(-2,2, step = 0.1, intitial = 2),
beta0 <- slider(-2,2. step .1, initial = 0))
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 = slider(-2,2, step = 0.1, intitial = 2),
beta0 <- slider(-2,2. step .1, initial = 0))
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = 0.1, intitial = 2),
beta0 <- slider(-2,2. step .1, initial = 0)
)
?manipulate
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = 0.1, intitial = 2),
beta0 <- slider(-2,2. step .1, initial = 0)
)
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2. step .1, initial = 0)
)
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2. step .1, initial = 0))
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2, step .1, initial = 0))
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2, step = .1, initial = 0))
install.packages("manipulate")
install.packages("manipulate")
x <- seq(-10, 10, length = 1000)
> manipulate(
+ plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
+ type = "l", lwd = 3, frame = FALSE),
+ beta1 <- slider(-2,2, step = .1, intitial = 2),
+ beta0 <- slider(-2,2, step = .1, initial = 0))
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2, step = .1, initial = 0))
?manipulate
?manipulate
??manipulate
x <- seq(-10, 10, length = 1000)
manipulate::manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2, step = .1, initial = 0))
x <- seq(-10, 10, length = 1000)
manipulate::manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- manipulate::slider(-2,2, step = .1, intitial = 2),
beta0 <- manipulate::slider(-2,2, step = .1, initial = 0))
?manipulate
install.packages("manipulate")
install.packages("manipulate")
install.packages("manipulate")
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 <- slider(-2,2, step = .1, intitial = 2),
beta0 <- slider(-2,2, step = .1, initial = 0))
swirl()
library(swirl)
swirl()
rgp1()
rgp()
rgp2
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
deviance(fit1)-deviance(fit3)
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail = F)
pf(n/d, 2, 43, lower.tail = FALSe)
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
md1 <- glm(ravenWinNum ~ ravenScore, family = "binomial", ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = "binomial", ravenData)
lodds <- predict(mdl, data.frame(ravenScore = c(0,3,6)))
exp(lodds)/(1 + exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50)
)
nxt()
view(hits)
View(hits)
class(hits[, 'data'])
class(hits[, 'date'])
as.integer(hits[, 'date'])
as.integer(head(hits[, 'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max[, 'visits']
which.max[, 'visits'])
which.max([, 'visits'])
which.max(hits[, 'visits'])
hits[704, ]
lamda <- mdl$fitted.values[704]
lamda <- mdl$fitted.values[704]
info()
skip()
qpois(.95, lambda)
mdl2 <- glm(visits ~ date, Poisson, hits, offset = log(visits + 1))
mdl2 <- glm(visits ~ date, poisson, hits, offset = log(visits + 1))
mdl2 <- glm(formula = simplystats ~ date, poisson, hits, offset = log(visits + 1))
summary(mdl2)
qpois(.95, mdl2$fitted.values[704])
librarY(MASS)
library(MASS)
?shuttle
shut <- glm(as.factor(auto) ~ wind, binary, shuttle)
shut <- glm(as.factor(auto) ~ wind, family = binary, shuttle)
?family
shut <- glm(as.factor(auto) ~ wind, family = binomial, shuttle)
shut <- glm(auto ~ wind, family = binomial, shuttle)
?shuttle
shut <- glm(use ~ wind, family = binomial, shuttle)
exp(shut$coefficients)
shut2 <- glm(use ~ wind + magn, family = binomial, shuttle)
exp(shut2$coefficients)
shut2
library(InsectSprays)
datasets::InsectSprays
spray_pois <- glm(count ~ as.factor(spray), family = poisson, data = InsectSprays)
exp(spray_pois$coefficients)
14.50/15.557
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
exp(shut$coefficients)
shut3 <- glm((1 - use) ~ windtail, family = binary, data = shuttle)
shut3 <- glm((1 - use) ~ windtail, family = binomial, data = shuttle)
?shuttle
shut3 <- glm((1 - use) ~ wind, family = binomial, data = shuttle)
shuttle[, use] <- shuttle[, use] - 1
shuttle$use <- shuttle$use - 1
shuttle$use <- as.factor(as.numeric(shuttle$use - 1))
shut3 <- glm(use ~ wind, family = binomial, data = shuttle)
head(shuttle)
shuttle$use <- as.factor(as.numeric(shuttle$use) - 1))
shuttle$use <- as.factor(as.numeric(shuttle$use) - 1)
shut3 <- glm(use ~ wind, family = binomial, data = shuttle)
head(shuttle)
shuttle$use <- as.numeric(shuttle$use) - 1
head(shuttle)
shuttle$use
1.2^3
1.2^4
1.2^3.6
1.2^3.7
1.2^3.8
1.2^3.9
72/20
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Neural Networks/neuralnetpackage_youtube.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 3.R')
?tree
??tree
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 3.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 3.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 3.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 3.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 3.R')
head(olive)
tail(olive)
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
names(train)
names(SAheart)
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
names(model)
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
warnings()
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
?order
names(varImp(model))
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 3/Quiz Week 3 Question 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 1.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 1.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 1.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 1.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 1.R')
qplot(pred1, pred2)
library(ElemStatLearn)
library(caret); library(ggplot2)
data("vowel.train")
data("vowel.test")
vowel.test$y <- factor(vowel.test$y)
vowel.train$y <- factor(vowel.train$y)
set.seed(33833)
model_rf <- train(y ~ ., method = "rf", data = vowel.train)
model_gbm <- train(y  ~., method = "gbm", data = vowel.train)
pred_rf <- predict(model_rf, vowel.test)
pred_gbm <- predict(model_gbm, vowel.test)
qplot(pred1, pred2)
qplot(pred_rf, pred_gbm)
comb_fit <- data.frame(model_rf, model_gbm, y <- vowel.test$y)
comb_fit <- data.frame(pred_rf, predict_gbm, y <- vowel.test$y)
comb_fit <- data.frame(pred_rf, pred_gbm, y <- vowel.test$y)
combModFit <- train(wage ~., method = "gam", data = comb_fit)
combModFit <- train(y ~., method = "gam", data = comb_fit)
combPred <- predict(combModFit, comb_fit)
combPred <- predict(combModFit, comb_fit)
sqrt(sum((pred_rf - vowel.test$y)^2))
confusionMatrix(pred_rf, vowel.test)
confusionMatrix(pred_rf, vowel.test$y)
confusionMatrix(pred_gbm, vowel.test$y)
confusionMatrix(combPred, vowel.test$y)
comb_fit <- data.frame(pred_rf, pred_gbm, y <- vowel.test$y)
combModFit <- train(y ~., method = "gam", data = vowel.train)
combModFit <- train(y ~., method = "gam", data = comb_fit)
combPred <- predict(combModFit, vowel.test)
comb_fit <- data.frame(pred_rf, pred_gbm, y <- vowel.test$y)
combModFit <- train(y ~., method = "gam", data = comb_fit)
confusionMatrix(pred_gbm, vowel.test$y)$overall
confusionMatrix(predict(pred_rf, vowel.test), predict(pred_gbm, vowel.test))
confusionMatrix(predict(model_rf, vowel.test), predict(model_gbm, vowel.test))
library(caret)
library(gbm); library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData <- data.frame(diagnosis, predictors)
inTrain <- createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training <- adData[inTrain, ]
testing <- adData[-inTrain, ]
set.seed(62433)
head(training)
names(training)
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 2.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 2.R')
?lda
?train
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 2.R')
?plot.enet
??plot.enet
install.packages("elasticnet")
?plot.enet
??plot.enet
set.seed(3523)
library(AppliedPredictiveModeling)
data("concrete")
#test/train
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(233)
nameS(testing)
names(training)
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
print(plot(model_lasso, xvar = "L1norm"))
print(plot(model_lasso, xvar = "fraction"))
print(plot(model_lasso, xvar = "step"))
print(plot(model_lasso, xvar = "step", use.color = TRUE))
?plot.enet
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
install.packages("e1071")
install.packages("e1071")
?e1071
??e1071
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
install.packages("e1071")
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Problem 3 and 5.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
?bats(0)
?bats()
install.packages("forecast")
)
?bats
??bats
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
install.packages("lubridate")
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
install.packages("forecast")
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
?forecast
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Machine Learning/Week 4/Question 4.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/Project Script.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/ui.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/ui.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/server.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/server.R')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/Project Script.R')
runApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
source('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/ui.R')
runApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
runApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
runApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
runApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name = 'nschampions2004',)
rsconnect::setAccountInfo(name = 'nschampions2004',
token = '9D12CE473CA602091B0D8EC09A8AA988',
secret - 'cU+JdtHKM3ddLsrotbG69YurPPETp4VjZyS28Nlg')
rsconnect::setAccountInfo(name='nschampions2004', token='9D12CE473CA602091B0D8EC09A8AA988', secret='cU+JdtHKM3ddLsrotbG69YurPPETp4VjZyS28Nlg')
library(rsconnect)
setwd("C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project")
rsconnect::deployApp()
rsconnect::deployApp(C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/)
rsconnect::deployApp(C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project)
rsconnect::deployApp("C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project")
rsconnect::deployApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
rsconnect::deployApp(getwd())
library(rsconnect)
rsconnect::deployApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project/')
rsconnect::deployApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
shinyapps::deployApp('C:/Users/Kyle.ligon/Desktop/Working Directory/Creating Data Products/Week 4 Project')
rsconnect::deployApp('C:/Users/Kyle.ligon/Desktop/Working_Directory/Creating_Data_Products/Week_4_Project')
shiny::runApp()
library(rsconnect)
deploy()
deployApp()
